# Tox es una herramienta para automatizar el empaquetamiento y prueba de software
# Tox emplea ambientes virtuales, lo que elimina dificultades con las variables de entorno
# en diferentes sistemas operativos y simplifica los pasos de entrenamiento, prueba y publicación del modelo

# recuerde instalar tox con 
# pip install tox
# y verifique que usa la versión 4 



[pytest]
log_cli_level=WARNING

[tox]
min_version = 4
envlist = test_app, checks
skipsdist = True

[testenv]
install_command = pip install {opts} {packages}

[testenv:test_app]
deps =
	-rtest_requirements.txt

setenv =
	PYTHONPATH=.
	PYTHONHASHSEED=0

commands=
	pytest \
	-vv \
	{posargs:app/tests/}


[testenv:run]
envdir = {toxworkdir}/test_app
deps =
	{[testenv:test_app]deps}

setenv =
	{[testenv:test_app]setenv}

commands=
	python app/main.py


[testenv:checks]
envdir = {toxworkdir}/checks
deps =
	-r{toxinidir}/typing_requirements.txt
commands =
	flake8 app
	isort app
	black app
	{posargs:mypy app}


[flake8]
exclude = .git,__pycache__,__init__.py,.mypy_cache,.pytest_cache,.venv,alembic
max-line-length = 88